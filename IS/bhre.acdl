<asset_composite xmlns="http://namespaces.softwareag.com/acdl/1.0" targetNamespace="http://namespaces.softwareag.com/webMethods/IS" name="bhre" runtimeVersion="10.3.0.0">
  <implementation.generic type="ispackage" />
  <buildInfo name="BuildVersion" value="10.3.0.0.1550222236523" />
  <buildInfo name="BuildTimestamp" value="2019-02-15T14:47:16" />
  <buildInfo name="MinimumTargetRuntimeVersion" value="10.3.0.0" />
  <property name="activatePkgOnInstall" displayName="Activate Package On Install">
    <value>true</value>
  </property>
  <property name="archivePkgOnInstall" displayName="Archive Package On Install">
    <value>true</value>
  </property>
  <property name="compilePackage" displayName="Compile Package On Install">
    <value>true</value>
  </property>
  <property name="fragPackage" displayName="Fragment Package On Install">
    <value>true</value>
  </property>
  <property name="clearACLs" displayName="Delete ACLs for the assets from the target Integration Server">
    <value>false</value>
  </property>
  <property name="disallowActivePackageInstall" displayName="disallowActivePackageInstall">
    <value>false</value>
  </property>
  <property name="packageExecutionCheck" displayName="packageExecutionCheck">
    <value>0</value>
  </property>
  <property name="suspendTriggersDuringDeploy" displayName="Suspend Triggers During Deployment">
    <value>false</value>
  </property>
  <property name="syncDocTypesToBroker" displayName="Synchronize Document Types To Broker During Deployment">
    <value>true</value>
  </property>
  <asset name="ISPackage.bhre" displayName="bhre">
    <implementation.generic type="ispackage" />
  </asset>
  <asset name="bhre.instagram_.services.GET_users_followed_by_svc1" displayName="bhre.instagram_.services:GET_users_followed_by_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_users_self_feed_svc1" displayName="bhre.instagram_.services:GET_users_self_feed_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_tags_media_recent_svc1" displayName="bhre.instagram_.services:GET_tags_media_recent_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_media_svc1" displayName="bhre.instagram_.services:GET_media_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_locations_svc1" displayName="bhre.instagram_.services:GET_locations_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Location</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.DELETE_media_comments_svc1" displayName="bhre.instagram_.services:DELETE_media_comments_svc1">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.instagram_.services.GET_locations_search_svc1" displayName="bhre.instagram_.services:GET_locations_search_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Location</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_tags_search_svc1" displayName="bhre.instagram_.services:GET_tags_search_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.POST_media_comments_svc1" displayName="bhre.instagram_.services:POST_media_comments_svc1">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.instagram_.services.DELETE_media_likes_svc1" displayName="bhre.instagram_.services:DELETE_media_likes_svc1">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.instagram_.services.GET_locations_media_recent_svc1" displayName="bhre.instagram_.services:GET_locations_media_recent_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.POST_media_likes_svc1" displayName="bhre.instagram_.services:POST_media_likes_svc1">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.instagram_.services.GET_media1_svc1" displayName="bhre.instagram_.services:GET_media1_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_tags_svc1" displayName="bhre.instagram_.services:GET_tags_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_users_svc1" displayName="bhre.instagram_.services:GET_users_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_users_self_requested_by_svc1" displayName="bhre.instagram_.services:GET_users_self_requested_by_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_users_search_svc1" displayName="bhre.instagram_.services:GET_users_search_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_users_media_recent_svc1" displayName="bhre.instagram_.services:GET_users_media_recent_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_geographies_media_recent_svc1" displayName="bhre.instagram_.services:GET_geographies_media_recent_svc1">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.instagram_.services.GET_media_popular_svc1" displayName="bhre.instagram_.services:GET_media_popular_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_media_search_svc1" displayName="bhre.instagram_.services:GET_media_search_svc1">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.instagram_.services.POST_users_relationship_svc1" displayName="bhre.instagram_.services:POST_users_relationship_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_media_likes_svc1" displayName="bhre.instagram_.services:GET_media_likes_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Like</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_users_self_media_liked_svc1" displayName="bhre.instagram_.services:GET_users_self_media_liked_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_media_comments_svc1" displayName="bhre.instagram_.services:GET_media_comments_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.Comment</dependsOn>
  </asset>
  <asset name="bhre.instagram_.services.GET_users_follows_svc1" displayName="bhre.instagram_.services:GET_users_follows_svc1">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
  </asset>
  <asset name="bhre.instagram_.docTypes.Tag" displayName="bhre.instagram_.docTypes:Tag">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.instagram_.docTypes.MiniProfile" displayName="bhre.instagram_.docTypes:MiniProfile">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.instagram_.docTypes.Media" displayName="bhre.instagram_.docTypes:Media">
    <implementation.generic type="isdocumenttype" />
    <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
    <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
    <dependsOn>IS:bhre.instagram_.docTypes.Location</dependsOn>
    <dependsOn>IS:bhre.instagram_.docTypes.Comment</dependsOn>
    <dependsOn>IS:bhre.instagram_.docTypes.Image</dependsOn>
  </asset>
  <asset name="bhre.instagram_.docTypes.Image" displayName="bhre.instagram_.docTypes:Image">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.instagram_.docTypes.Comment" displayName="bhre.instagram_.docTypes:Comment">
    <implementation.generic type="isdocumenttype" />
    <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
  </asset>
  <asset name="bhre.instagram_.docTypes.User" displayName="bhre.instagram_.docTypes:User">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.instagram_.docTypes.Location" displayName="bhre.instagram_.docTypes:Location">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.instagram_.docTypes.Like" displayName="bhre.instagram_.docTypes:Like">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.instagram_.resources.Location" displayName="bhre.instagram_.resources:Location">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_locations_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_locations_media_recent_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_locations_search_svc1</dependsOn>
  </asset>
  <asset name="bhre.instagram_.resources.Media" displayName="bhre.instagram_.resources:Media">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_media_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_media1_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_media_search_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_media_popular_svc1</dependsOn>
  </asset>
  <asset name="bhre.instagram_.resources.Users" displayName="bhre.instagram_.resources:Users">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_users_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_users_self_feed_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_users_media_recent_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_users_self_media_liked_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_users_search_svc1</dependsOn>
  </asset>
  <asset name="bhre.instagram_.resources.Tags" displayName="bhre.instagram_.resources:Tags">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_tags_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_tags_media_recent_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_tags_search_svc1</dependsOn>
  </asset>
  <asset name="bhre.instagram_.resources.Relationships" displayName="bhre.instagram_.resources:Relationships">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_users_follows_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_users_followed_by_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.GET_users_self_requested_by_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.POST_users_relationship_svc1</dependsOn>
  </asset>
  <asset name="bhre.instagram_.resources.Likes" displayName="bhre.instagram_.resources:Likes">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_media_likes_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.POST_media_likes_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.DELETE_media_likes_svc1</dependsOn>
  </asset>
  <asset name="bhre.instagram_.resources.Comments" displayName="bhre.instagram_.resources:Comments">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_media_comments_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.POST_media_comments_svc1</dependsOn>
    <dependsOn>IS:bhre.instagram_.services.DELETE_media_comments_svc1</dependsOn>
  </asset>
  <asset name="bhre.instagram_.resources._default" displayName="bhre.instagram_.resources:_default">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.instagram_.services.GET_geographies_media_recent_svc1</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.docTypes.ApiResponse" displayName="bhre.tagsTest_.docTypes:ApiResponse">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.tagsTest_.docTypes.Order" displayName="bhre.tagsTest_.docTypes:Order">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.tagsTest_.docTypes.Tag" displayName="bhre.tagsTest_.docTypes:Tag">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.tagsTest_.docTypes.Category" displayName="bhre.tagsTest_.docTypes:Category">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.tagsTest_.docTypes.Pet" displayName="bhre.tagsTest_.docTypes:Pet">
    <implementation.generic type="isdocumenttype" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Category</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.docTypes.Tag</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.docTypes.User" displayName="bhre.tagsTest_.docTypes:User">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.tagsTest_.resources.pet" displayName="bhre.tagsTest_.resources:pet">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.tagsTest_.services.updatePet</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.addPet</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.findPetsByStatus</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.findPetsByTags</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.getPetById</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.updatePetWithForm</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.deletePet</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.uploadFile</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.resources.user" displayName="bhre.tagsTest_.resources:user">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.tagsTest_.services.createUser</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.createUsersWithArrayInput</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.createUsersWithListInput</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.loginUser</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.logoutUser</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.getUserByName</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.updateUser</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.deleteUser</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.resources.store" displayName="bhre.tagsTest_.resources:store">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.tagsTest_.services.getInventory</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.placeOrder</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.getOrderById</dependsOn>
    <dependsOn>IS:bhre.tagsTest_.services.deleteOrder</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.getOrderById" displayName="bhre.tagsTest_.services:getOrderById">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Order</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.createUsersWithArrayInput" displayName="bhre.tagsTest_.services:createUsersWithArrayInput">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.uploadFile" displayName="bhre.tagsTest_.services:uploadFile">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.ApiResponse</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.updatePet" displayName="bhre.tagsTest_.services:updatePet">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.deletePet" displayName="bhre.tagsTest_.services:deletePet">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.tagsTest_.services.getUserByName" displayName="bhre.tagsTest_.services:getUserByName">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.getPetById" displayName="bhre.tagsTest_.services:getPetById">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.findPetsByStatus" displayName="bhre.tagsTest_.services:findPetsByStatus">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.placeOrder" displayName="bhre.tagsTest_.services:placeOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Order</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.deleteUser" displayName="bhre.tagsTest_.services:deleteUser">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.tagsTest_.services.findPetsByTags" displayName="bhre.tagsTest_.services:findPetsByTags">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.deleteOrder" displayName="bhre.tagsTest_.services:deleteOrder">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.tagsTest_.services.createUser" displayName="bhre.tagsTest_.services:createUser">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.updateUser" displayName="bhre.tagsTest_.services:updateUser">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.getInventory" displayName="bhre.tagsTest_.services:getInventory">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.tagsTest_.services.addPet" displayName="bhre.tagsTest_.services:addPet">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.logoutUser" displayName="bhre.tagsTest_.services:logoutUser">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.tagsTest_.services.loginUser" displayName="bhre.tagsTest_.services:loginUser">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.tagsTest_.services.createUsersWithListInput" displayName="bhre.tagsTest_.services:createUsersWithListInput">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.tagsTest_.services.updatePetWithForm" displayName="bhre.tagsTest_.services:updatePetWithForm">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.restDescriptor_.services.getPetById" displayName="bhre.restDescriptor_.services:getPetById">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.placeOrder" displayName="bhre.restDescriptor_.services:placeOrder">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Order</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.deleteUser" displayName="bhre.restDescriptor_.services:deleteUser">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.restDescriptor_.services.getOrderById" displayName="bhre.restDescriptor_.services:getOrderById">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Order</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.loginUser" displayName="bhre.restDescriptor_.services:loginUser">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.restDescriptor_.services.findPetsByStatus" displayName="bhre.restDescriptor_.services:findPetsByStatus">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.createUser" displayName="bhre.restDescriptor_.services:createUser">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.logoutUser" displayName="bhre.restDescriptor_.services:logoutUser">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.restDescriptor_.services.updateUser" displayName="bhre.restDescriptor_.services:updateUser">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.deleteOrder" displayName="bhre.restDescriptor_.services:deleteOrder">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.restDescriptor_.services.addPet" displayName="bhre.restDescriptor_.services:addPet">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.updatePet" displayName="bhre.restDescriptor_.services:updatePet">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.deletePet" displayName="bhre.restDescriptor_.services:deletePet">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.restDescriptor_.services.getUserByName" displayName="bhre.restDescriptor_.services:getUserByName">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.findPetsByTags" displayName="bhre.restDescriptor_.services:findPetsByTags">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.updatePetWithForm" displayName="bhre.restDescriptor_.services:updatePetWithForm">
    <implementation.generic type="isflowservice" />
  </asset>
  <asset name="bhre.restDescriptor_.services.createUsersWithArrayInput" displayName="bhre.restDescriptor_.services:createUsersWithArrayInput">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.services.createUsersWithListInput" displayName="bhre.restDescriptor_.services:createUsersWithListInput">
    <implementation.generic type="isflowservice" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.docTypes.Order" displayName="bhre.restDescriptor_.docTypes:Order">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.restDescriptor_.docTypes.Tag" displayName="bhre.restDescriptor_.docTypes:Tag">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.restDescriptor_.docTypes.User" displayName="bhre.restDescriptor_.docTypes:User">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.restDescriptor_.docTypes.Category" displayName="bhre.restDescriptor_.docTypes:Category">
    <implementation.generic type="isdocumenttype" />
  </asset>
  <asset name="bhre.restDescriptor_.docTypes.Pet" displayName="bhre.restDescriptor_.docTypes:Pet">
    <implementation.generic type="isdocumenttype" />
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Category</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.docTypes.Tag</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.resources.pet" displayName="bhre.restDescriptor_.resources:pet">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.restDescriptor_.services.updatePet</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.addPet</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.findPetsByStatus</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.findPetsByTags</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.deletePet</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.getPetById</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.updatePetWithForm</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.resources.store" displayName="bhre.restDescriptor_.resources:store">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.restDescriptor_.services.placeOrder</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.getOrderById</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.deleteOrder</dependsOn>
  </asset>
  <asset name="bhre.restDescriptor_.resources.user" displayName="bhre.restDescriptor_.resources:user">
    <implementation.generic type="isrestresource" />
    <dependsOn>IS:bhre.restDescriptor_.services.createUser</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.createUsersWithArrayInput</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.createUsersWithListInput</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.loginUser</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.logoutUser</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.getUserByName</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.updateUser</dependsOn>
    <dependsOn>IS:bhre.restDescriptor_.services.deleteUser</dependsOn>
  </asset>
  <asset name="bhre.ffdee" displayName="bhre:ffdee">
    <implementation.generic type="ffdictionary" />
  </asset>
  <asset name="bhre.code" displayName="code">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.code.classes" displayName="code/classes">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.code.source" displayName="code/source">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.code.jars" displayName="code/jars">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.doc" displayName="doc">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.pub" displayName="pub">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.templates" displayName="templates">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.web" displayName="web">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.config" displayName="config">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.config.urlalias.cnf" displayName="config/urlalias.cnf">
    <implementation.generic type="isfile" />
  </asset>
  <asset name="bhre.config.aclmap_pkg.cnf" displayName="config/aclmap_pkg.cnf">
    <implementation.generic type="isfile" />
  </asset>
  <asset name="bhre.resources" displayName="resources">
    <implementation.generic type="isfolder" />
  </asset>
  <asset name="bhre.lib" displayName="lib">
    <implementation.generic type="isfolder" />
  </asset>
</asset_composite>

