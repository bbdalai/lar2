<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<asset_composite name="bhre" runtimeVersion="10.3.0.0" targetNamespace="http://namespaces.softwareag.com/webMethods/IS" xmlns="http://namespaces.softwareag.com/acdl/1.0" xmlns:EDA="http://namespaces.softwareag.com/webMethods/EDA" xmlns:MWS="http://namespaces.softwareag.com/webMethods/MWS" xmlns:IS="http://namespaces.softwareag.com/webMethods/IS" xmlns:APIPORTAL="http://namespaces.softwareag.com/webMethods/APIPORTAL" xmlns:AgileApps="http://namespaces.softwareag.com/webMethods/AgileApps" xmlns:BROKER="http://namespaces.softwareag.com/webMethods/BROKER" xmlns:implDetails="http://namespaces.softwareag.com/acdl/implDetails" xmlns:UniversalMessaging="http://namespaces.softwareag.com/webMethods/UniversalMessaging" xmlns:TN="http://namespaces.softwareag.com/webMethods/TN" xmlns:RULES="http://namespaces.softwareag.com/webMethods/RULES" xmlns:BPM="http://namespaces.softwareag.com/webMethods/BPM" xmlns:Optimize="http://namespaces.softwareag.com/webMethods/Optimize">
    <implementation.generic type="ispackage"/>
    <buildInfo name="BuildTimestamp" value="2019-02-15T14:47:16"/>
    <buildInfo name="BuildVersion" value="10.3.0.0.1550222236523"/>
    <buildInfo name="MinimumTargetRuntimeVersion" value="10.3.0.0"/>
    <asset name="ISPackage.bhre" displayName="bhre" isDeployable="true">
        <implementation.generic type="ispackage"/>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_followed_by_svc1" displayName="bhre.instagram_.services:GET_users_followed_by_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_self_feed_svc1" displayName="bhre.instagram_.services:GET_users_self_feed_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_tags_media_recent_svc1" displayName="bhre.instagram_.services:GET_tags_media_recent_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_media_svc1" displayName="bhre.instagram_.services:GET_media_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_locations_svc1" displayName="bhre.instagram_.services:GET_locations_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Location</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.DELETE_media_comments_svc1" displayName="bhre.instagram_.services:DELETE_media_comments_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.instagram_.services.GET_locations_search_svc1" displayName="bhre.instagram_.services:GET_locations_search_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Location</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_tags_search_svc1" displayName="bhre.instagram_.services:GET_tags_search_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.POST_media_comments_svc1" displayName="bhre.instagram_.services:POST_media_comments_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.instagram_.services.DELETE_media_likes_svc1" displayName="bhre.instagram_.services:DELETE_media_likes_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.instagram_.services.GET_locations_media_recent_svc1" displayName="bhre.instagram_.services:GET_locations_media_recent_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.POST_media_likes_svc1" displayName="bhre.instagram_.services:POST_media_likes_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.instagram_.services.GET_media1_svc1" displayName="bhre.instagram_.services:GET_media1_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_tags_svc1" displayName="bhre.instagram_.services:GET_tags_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_svc1" displayName="bhre.instagram_.services:GET_users_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_self_requested_by_svc1" displayName="bhre.instagram_.services:GET_users_self_requested_by_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_search_svc1" displayName="bhre.instagram_.services:GET_users_search_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_media_recent_svc1" displayName="bhre.instagram_.services:GET_users_media_recent_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_geographies_media_recent_svc1" displayName="bhre.instagram_.services:GET_geographies_media_recent_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.instagram_.services.GET_media_popular_svc1" displayName="bhre.instagram_.services:GET_media_popular_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_media_search_svc1" displayName="bhre.instagram_.services:GET_media_search_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.instagram_.services.POST_users_relationship_svc1" displayName="bhre.instagram_.services:POST_users_relationship_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_media_likes_svc1" displayName="bhre.instagram_.services:GET_media_likes_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Like</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_self_media_liked_svc1" displayName="bhre.instagram_.services:GET_users_self_media_liked_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Media</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_media_comments_svc1" displayName="bhre.instagram_.services:GET_media_comments_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Comment</dependsOn>
    </asset>
    <asset name="bhre.instagram_.services.GET_users_follows_svc1" displayName="bhre.instagram_.services:GET_users_follows_svc1" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
    </asset>
    <asset name="bhre.instagram_.docTypes.Tag" displayName="bhre.instagram_.docTypes:Tag" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.instagram_.docTypes.MiniProfile" displayName="bhre.instagram_.docTypes:MiniProfile" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.instagram_.docTypes.Media" displayName="bhre.instagram_.docTypes:Media" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
        <dependsOn>IS:bhre.instagram_.docTypes.Comment</dependsOn>
        <dependsOn>IS:bhre.instagram_.docTypes.Image</dependsOn>
        <dependsOn>IS:bhre.instagram_.docTypes.Location</dependsOn>
        <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
        <dependsOn>IS:bhre.instagram_.docTypes.Tag</dependsOn>
    </asset>
    <asset name="bhre.instagram_.docTypes.Image" displayName="bhre.instagram_.docTypes:Image" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.instagram_.docTypes.Comment" displayName="bhre.instagram_.docTypes:Comment" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
        <dependsOn>IS:bhre.instagram_.docTypes.MiniProfile</dependsOn>
    </asset>
    <asset name="bhre.instagram_.docTypes.User" displayName="bhre.instagram_.docTypes:User" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.instagram_.docTypes.Location" displayName="bhre.instagram_.docTypes:Location" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.instagram_.docTypes.Like" displayName="bhre.instagram_.docTypes:Like" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.instagram_.resources.Location" displayName="bhre.instagram_.resources:Location" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.GET_locations_media_recent_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_locations_search_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_locations_svc1</dependsOn>
    </asset>
    <asset name="bhre.instagram_.resources.Media" displayName="bhre.instagram_.resources:Media" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.GET_media1_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_media_popular_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_media_search_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_media_svc1</dependsOn>
    </asset>
    <asset name="bhre.instagram_.resources.Users" displayName="bhre.instagram_.resources:Users" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.GET_users_media_recent_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_users_search_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_users_self_feed_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_users_self_media_liked_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_users_svc1</dependsOn>
    </asset>
    <asset name="bhre.instagram_.resources.Tags" displayName="bhre.instagram_.resources:Tags" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.GET_tags_media_recent_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_tags_search_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_tags_svc1</dependsOn>
    </asset>
    <asset name="bhre.instagram_.resources.Relationships" displayName="bhre.instagram_.resources:Relationships" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.GET_users_followed_by_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_users_follows_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_users_self_requested_by_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.POST_users_relationship_svc1</dependsOn>
    </asset>
    <asset name="bhre.instagram_.resources.Likes" displayName="bhre.instagram_.resources:Likes" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.DELETE_media_likes_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_media_likes_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.POST_media_likes_svc1</dependsOn>
    </asset>
    <asset name="bhre.instagram_.resources.Comments" displayName="bhre.instagram_.resources:Comments" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.DELETE_media_comments_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.GET_media_comments_svc1</dependsOn>
        <dependsOn>IS:bhre.instagram_.services.POST_media_comments_svc1</dependsOn>
    </asset>
    <asset name="bhre.instagram_.resources._default" displayName="bhre.instagram_.resources:_default" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.instagram_.services.GET_geographies_media_recent_svc1</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.docTypes.ApiResponse" displayName="bhre.tagsTest_.docTypes:ApiResponse" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.tagsTest_.docTypes.Order" displayName="bhre.tagsTest_.docTypes:Order" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.tagsTest_.docTypes.Tag" displayName="bhre.tagsTest_.docTypes:Tag" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.tagsTest_.docTypes.Category" displayName="bhre.tagsTest_.docTypes:Category" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.tagsTest_.docTypes.Pet" displayName="bhre.tagsTest_.docTypes:Pet" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Category</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Tag</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.docTypes.User" displayName="bhre.tagsTest_.docTypes:User" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.tagsTest_.resources.pet" displayName="bhre.tagsTest_.resources:pet" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.tagsTest_.services.addPet</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.deletePet</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.findPetsByStatus</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.findPetsByTags</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.getPetById</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.updatePet</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.updatePetWithForm</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.uploadFile</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.resources.user" displayName="bhre.tagsTest_.resources:user" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.tagsTest_.services.createUser</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.createUsersWithArrayInput</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.createUsersWithListInput</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.deleteUser</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.getUserByName</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.loginUser</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.logoutUser</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.updateUser</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.resources.store" displayName="bhre.tagsTest_.resources:store" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.tagsTest_.services.deleteOrder</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.getInventory</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.getOrderById</dependsOn>
        <dependsOn>IS:bhre.tagsTest_.services.placeOrder</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.getOrderById" displayName="bhre.tagsTest_.services:getOrderById" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Order</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.createUsersWithArrayInput" displayName="bhre.tagsTest_.services:createUsersWithArrayInput" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.uploadFile" displayName="bhre.tagsTest_.services:uploadFile" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.ApiResponse</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.updatePet" displayName="bhre.tagsTest_.services:updatePet" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.deletePet" displayName="bhre.tagsTest_.services:deletePet" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.tagsTest_.services.getUserByName" displayName="bhre.tagsTest_.services:getUserByName" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.getPetById" displayName="bhre.tagsTest_.services:getPetById" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.findPetsByStatus" displayName="bhre.tagsTest_.services:findPetsByStatus" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.placeOrder" displayName="bhre.tagsTest_.services:placeOrder" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Order</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.deleteUser" displayName="bhre.tagsTest_.services:deleteUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.tagsTest_.services.findPetsByTags" displayName="bhre.tagsTest_.services:findPetsByTags" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.deleteOrder" displayName="bhre.tagsTest_.services:deleteOrder" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.tagsTest_.services.createUser" displayName="bhre.tagsTest_.services:createUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.updateUser" displayName="bhre.tagsTest_.services:updateUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.getInventory" displayName="bhre.tagsTest_.services:getInventory" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.tagsTest_.services.addPet" displayName="bhre.tagsTest_.services:addPet" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.logoutUser" displayName="bhre.tagsTest_.services:logoutUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.tagsTest_.services.loginUser" displayName="bhre.tagsTest_.services:loginUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.tagsTest_.services.createUsersWithListInput" displayName="bhre.tagsTest_.services:createUsersWithListInput" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.tagsTest_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.tagsTest_.services.updatePetWithForm" displayName="bhre.tagsTest_.services:updatePetWithForm" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.restDescriptor_.services.getPetById" displayName="bhre.restDescriptor_.services:getPetById" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.placeOrder" displayName="bhre.restDescriptor_.services:placeOrder" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Order</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.deleteUser" displayName="bhre.restDescriptor_.services:deleteUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.restDescriptor_.services.getOrderById" displayName="bhre.restDescriptor_.services:getOrderById" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Order</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.loginUser" displayName="bhre.restDescriptor_.services:loginUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.restDescriptor_.services.findPetsByStatus" displayName="bhre.restDescriptor_.services:findPetsByStatus" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.createUser" displayName="bhre.restDescriptor_.services:createUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.logoutUser" displayName="bhre.restDescriptor_.services:logoutUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.restDescriptor_.services.updateUser" displayName="bhre.restDescriptor_.services:updateUser" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.deleteOrder" displayName="bhre.restDescriptor_.services:deleteOrder" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.restDescriptor_.services.addPet" displayName="bhre.restDescriptor_.services:addPet" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.updatePet" displayName="bhre.restDescriptor_.services:updatePet" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.deletePet" displayName="bhre.restDescriptor_.services:deletePet" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.restDescriptor_.services.getUserByName" displayName="bhre.restDescriptor_.services:getUserByName" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.findPetsByTags" displayName="bhre.restDescriptor_.services:findPetsByTags" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Pet</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.updatePetWithForm" displayName="bhre.restDescriptor_.services:updatePetWithForm" isDeployable="true">
        <implementation.generic type="isflowservice"/>
    </asset>
    <asset name="bhre.restDescriptor_.services.createUsersWithArrayInput" displayName="bhre.restDescriptor_.services:createUsersWithArrayInput" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.services.createUsersWithListInput" displayName="bhre.restDescriptor_.services:createUsersWithListInput" isDeployable="true">
        <implementation.generic type="isflowservice"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.User</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.docTypes.Order" displayName="bhre.restDescriptor_.docTypes:Order" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.restDescriptor_.docTypes.Tag" displayName="bhre.restDescriptor_.docTypes:Tag" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.restDescriptor_.docTypes.User" displayName="bhre.restDescriptor_.docTypes:User" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.restDescriptor_.docTypes.Category" displayName="bhre.restDescriptor_.docTypes:Category" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
    </asset>
    <asset name="bhre.restDescriptor_.docTypes.Pet" displayName="bhre.restDescriptor_.docTypes:Pet" isDeployable="true">
        <implementation.generic type="isdocumenttype"/>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Category</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.docTypes.Tag</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.resources.pet" displayName="bhre.restDescriptor_.resources:pet" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.restDescriptor_.services.addPet</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.deletePet</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.findPetsByStatus</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.findPetsByTags</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.getPetById</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.updatePet</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.updatePetWithForm</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.resources.store" displayName="bhre.restDescriptor_.resources:store" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.restDescriptor_.services.deleteOrder</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.getOrderById</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.placeOrder</dependsOn>
    </asset>
    <asset name="bhre.restDescriptor_.resources.user" displayName="bhre.restDescriptor_.resources:user" isDeployable="true">
        <implementation.generic type="isrestresource"/>
        <dependsOn>IS:bhre.restDescriptor_.services.createUser</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.createUsersWithArrayInput</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.createUsersWithListInput</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.deleteUser</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.getUserByName</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.loginUser</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.logoutUser</dependsOn>
        <dependsOn>IS:bhre.restDescriptor_.services.updateUser</dependsOn>
    </asset>
    <asset name="bhre.ffdee" displayName="bhre:ffdee" isDeployable="true">
        <implementation.generic type="ffdictionary"/>
    </asset>
    <asset name="bhre.code" displayName="code" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.code.classes" displayName="code/classes" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.code.source" displayName="code/source" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.code.jars" displayName="code/jars" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.doc" displayName="doc" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.pub" displayName="pub" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.templates" displayName="templates" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.web" displayName="web" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.config" displayName="config" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.config.urlalias.cnf" displayName="config/urlalias.cnf" isDeployable="true">
        <implementation.generic type="isfile"/>
    </asset>
    <asset name="bhre.config.aclmap_pkg.cnf" displayName="config/aclmap_pkg.cnf" isDeployable="true">
        <implementation.generic type="isfile"/>
    </asset>
    <asset name="bhre.resources" displayName="resources" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <asset name="bhre.lib" displayName="lib" isDeployable="true">
        <implementation.generic type="isfolder"/>
    </asset>
    <property name="activatePkgOnInstall" many="false" isSecure="false" displayName="activatePkgOnInstall">
        <value>false</value>
    </property>
    <property name="archivePkgOnInstall" many="false" isSecure="false" displayName="Archive Package On Install">
        <value>true</value>
    </property>
    <property name="compilePackage" many="false" isSecure="false" displayName="Compile Package On Install">
        <value>true</value>
    </property>
    <property name="fragPackage" many="false" isSecure="false" displayName="Fragment Package On Install">
        <value>true</value>
    </property>
    <property name="clearACLs" many="false" isSecure="false" displayName="Delete ACLs for the assets from the target Integration Server">
        <value>false</value>
    </property>
    <property name="disallowActivePackageInstall" many="false" isSecure="false" displayName="disallowActivePackageInstall">
        <value>false</value>
    </property>
    <property name="packageExecutionCheck" many="false" isSecure="false" displayName="packageExecutionCheck">
        <value>0</value>
    </property>
    <property name="suspendTriggersDuringDeploy" many="false" isSecure="false" displayName="Suspend Triggers During Deployment">
        <value>false</value>
    </property>
    <property name="syncDocTypesToBroker" many="false" isSecure="false" displayName="Synchronize Document Types To Broker During Deployment">
        <value>true</value>
    </property>
</asset_composite>
